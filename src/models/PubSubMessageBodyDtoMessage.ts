/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e m√©dias empresas.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PubSubMessageBodyDtoMessage
 */
export interface PubSubMessageBodyDtoMessage {
    /**
     * 
     * @type {string}
     * @memberof PubSubMessageBodyDtoMessage
     */
    data: string;
    /**
     * 
     * @type {string}
     * @memberof PubSubMessageBodyDtoMessage
     */
    messageId: string;
    /**
     * 
     * @type {string}
     * @memberof PubSubMessageBodyDtoMessage
     */
    publishTime: string;
}

/**
 * Check if a given object implements the PubSubMessageBodyDtoMessage interface.
 */
export function instanceOfPubSubMessageBodyDtoMessage(value: object): value is PubSubMessageBodyDtoMessage {
    if (!('data' in value) || value['data'] === undefined) return false;
    if (!('messageId' in value) || value['messageId'] === undefined) return false;
    if (!('publishTime' in value) || value['publishTime'] === undefined) return false;
    return true;
}

export function PubSubMessageBodyDtoMessageFromJSON(json: any): PubSubMessageBodyDtoMessage {
    return PubSubMessageBodyDtoMessageFromJSONTyped(json, false);
}

export function PubSubMessageBodyDtoMessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): PubSubMessageBodyDtoMessage {
    if (json == null) {
        return json;
    }
    return {
        
        'data': json['data'],
        'messageId': json['messageId'],
        'publishTime': json['publishTime'],
    };
}

export function PubSubMessageBodyDtoMessageToJSON(json: any): PubSubMessageBodyDtoMessage {
    return PubSubMessageBodyDtoMessageToJSONTyped(json, false);
}

export function PubSubMessageBodyDtoMessageToJSONTyped(value?: PubSubMessageBodyDtoMessage | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': value['data'],
        'messageId': value['messageId'],
        'publishTime': value['publishTime'],
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e médias empresas.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AuthUserEntity,
  ExceptionResponseEntity,
  PubSubMessageBodyDto,
} from '../models/index';
import {
    AuthUserEntityFromJSON,
    AuthUserEntityToJSON,
    ExceptionResponseEntityFromJSON,
    ExceptionResponseEntityToJSON,
    PubSubMessageBodyDtoFromJSON,
    PubSubMessageBodyDtoToJSON,
} from '../models/index';

export interface RefreshClerkUserOnCacheRequest {
    pubSubMessageBodyDto: PubSubMessageBodyDto;
}

/**
 * AuthApi - interface
 * 
 * @export
 * @interface AuthApiInterface
 */
export interface AuthApiInterface {
    /**
     * 
     * @summary Atualiza os dados do usuário a partir do token na cache.
     * @param {PubSubMessageBodyDto} pubSubMessageBodyDto 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthApiInterface
     */
    refreshClerkUserOnCacheRaw(requestParameters: RefreshClerkUserOnCacheRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AuthUserEntity>>;

    /**
     * Atualiza os dados do usuário a partir do token na cache.
     */
    refreshClerkUserOnCache(requestParameters: RefreshClerkUserOnCacheRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AuthUserEntity>;

}

/**
 * 
 */
export class AuthApi extends runtime.BaseAPI implements AuthApiInterface {

    /**
     * Atualiza os dados do usuário a partir do token na cache.
     */
    async refreshClerkUserOnCacheRaw(requestParameters: RefreshClerkUserOnCacheRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AuthUserEntity>> {
        if (requestParameters['pubSubMessageBodyDto'] == null) {
            throw new runtime.RequiredError(
                'pubSubMessageBodyDto',
                'Required parameter "pubSubMessageBodyDto" was null or undefined when calling refreshClerkUserOnCache().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/auth/clerk/users/cache/refresh`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: PubSubMessageBodyDtoToJSON(requestParameters['pubSubMessageBodyDto']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AuthUserEntityFromJSON(jsonValue));
    }

    /**
     * Atualiza os dados do usuário a partir do token na cache.
     */
    async refreshClerkUserOnCache(requestParameters: RefreshClerkUserOnCacheRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AuthUserEntity> {
        const response = await this.refreshClerkUserOnCacheRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
